Reference the Tag Helpers, install it from
https://www.nuget.org/packages/jQWidgets.AspNetCore.Mvc.TagHelpers/
In package manager console, run: Install-Package jQWidgets.AspNetCore.Mvc.TagHelpers -Version 2.0.1

1. Install visual studio 2017 or visual Studio Code. ASP.net Core web development must be install.

2. Portal project is create as ASP.net Core Web Application using razor page.

3. jQWidgets is downloaded for free for our project. Copy the downloaded script to our project folder.
4. Install jQWidgets.AspNetCore.Mvc.TagHelpers nuget package to current project.
https://www.jqwidgets.com/asp.net-core-mvc-tag-helpers-documentation/

5. https://sites.google.com/site/gmukmls/kmls to host online kml files

Azure virtual machine: PineApples18

Hostname: .gmu.edu

Username: ywang95

Password:9c3f-6ee2b2a492f3

Website: https://jpssflood.gmu.edu/

Gnumber: G01175222
Title: Website developer
Department: Geography and Geoinformation Science
Position #: WGE372
Suffix: 00
Org #: 182401
Exec Level: Provost (I think once you select this, a couple more fields pop up. You should select College of Science and then type in Geography and Geoinformation Science)
Work：07PineApples+20

Stop/Start/Check Web App service
sudo systemctl stop kestrel-gmuffapp.service
sudo systemctl start kestrel-gmuffapp.service
sudo systemctl status kestrel-gmuffapp.service


Webserver config: /etc/httpd/conf.d/gmuffapp.conf
Monitor webserver daemon /etc/systemd/system/kestrel-gmuffapp.service

 # apachectl configtest

Syntax OK

 

The website gives 503 since 127.0.0.1:5000 is offline.

 

# httpd -V

Server version: Apache/2.4.34 (Red Hat)

There is no password for root@localhost (mysql). (Mysql server listens on ‘localhost’ only).

Your account is in ‘mysql’ group, which means you can connect to the mysql server by simply running ‘mysql’ command (or mysql -u root)

 

$ mysql # or mysql -u root

Welcome to the MariaDB monitor.  Commands end with ; or \g.

Your MariaDB connection id is 8

Server version: 10.3.13-MariaDB MariaDB Server

 

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

 

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

 

MariaDB [(none)]>

rm -r ./20201201/archive/
rm -r ./20201202/archive/
rm -r ./20201203/archive/
rm -r ./20201204/archive/
rm -r ./20201205/archive/
rm -r ./20201206/archive/
rm -r ./20201207/archive/
rm -r ./20201208/archive/
rm -r ./20201209/archive/
rm -r ./20201210/archive/
rm -r ./20201211/archive/
rm -r ./20201212/archive/
rm -r ./20201213/archive/
rm -r ./20201214/archive/
rm -r ./20201215/archive/
rm -r ./20201216/archive/
rm -r ./20201217/archive/
rm -r ./20201218/archive/
rm -r ./20201219/archive/
rm -r ./20201220/archive/
rm -r ./20201221/archive/
rm -r ./20201222/archive/
rm -r ./20201223/archive/
rm -r ./20201224/archive/
rm -r ./20201225/archive/
rm -r ./20201226/archive/
rm -r ./20201227/archive/
rm -r ./20201228/archive/
rm -r ./20201229/archive/
rm -r ./20201230/archive/
rm -r ./20201231/archive/



pushd ./20190921/tif/
Get-Item *.tif | Foreach-Object { Write-Host $_.Name; Compress-Archive $_.Name ($_.Name + ".zip") }
del *.tif
popd
pushd ./20190921/hdf/
Get-Item *.hdf | Foreach-Object { Write-Host $_.Name; Compress-Archive $_.Name ($_.Name + ".zip") }
del *.hdf
popd

$date = [System.DateTime]::Parse("2019-09-23 00:00:00")

$now = $now.AddDays(1);

function CompressFiles ([DateTime]$inputDate)
{
	$dateString = $inputDate.ToString("yyyyMMdd")
	$path = "./" + $dateString + "/tif/"
	Write-Host $path
	pushd $path
	Get-Item *.tif | Foreach-Object { Write-Host $_.Name; Compress-Archive $_.Name ($_.Name + ".zip") }
	del *.tif
	popd
	$path = "./" + $dateString + "/hdf/"
	Write-Host $path
	pushd $path
	Get-Item *.hdf | Foreach-Object { Write-Host $_.Name; Compress-Archive $_.Name ($_.Name + ".zip") }
	del *.hdf
	popd
}
